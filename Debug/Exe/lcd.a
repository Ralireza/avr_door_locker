;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <io.h>
;#include <delay.h>
;#include <alcd.h>
;
;#define pad PORTD
;#define r1 PORTD.0
;#define r2 PORTD.1
;#define r3 PORTD.2
;#define r4 PORTD.3
;
;#define c1 PORTD.4
;#define c2 PORTD.5
;#define c3 PORTD.7
;
;
;void check1(void);
;void check2(void);
;void check3(void);
;void check4(void);
;void chpass();
;void beepbeep();
;void notbeep();
;
;   int index=0;
;      unsigned short c=1;
;      unsigned char value;
;      unsigned char input[4];
;      unsigned char pass[4]={'7','8','9','#'};

	.DSEG
;
;void main(void)
; 0000 0021 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0022 
; 0000 0023 
; 0000 0024 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0025 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0026 // Port B initialization
; 0000 0027 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0028 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0029 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 002A PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 002B // Port C initialization
; 0000 002C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 002D DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 002E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 002F PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0030 
; 0000 0031 // Port D initialization
; 0000 0032 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0033 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0034 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0035 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0036 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0037 TCNT0=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0038 OCR0=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0039 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 003A TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 003B TCNT1H=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 003C TCNT1L=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 003D ICR1H=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 003E ICR1L=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 003F OCR1AH=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0040 OCR1AL=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0041 OCR1BH=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0042 OCR1BL=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0043 
; 0000 0044 ASSR=0<<AS2;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0045 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0046 TCNT2=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0047 OCR2=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0048 
; 0000 0049 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 004A TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 004B 
; 0000 004C MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 004D MCUCSR=(0<<ISC2);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 004E 
; 0000 004F // USART initialization
; 0000 0050 // USART disabled
; 0000 0051 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0052 
; 0000 0053 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0054 SFIOR=(0<<ACME);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0055 
; 0000 0056 // ADC initialization
; 0000 0057 // ADC disabled
; 0000 0058 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0059 
; 0000 005A // SPI initialization
; 0000 005B // SPI disabled
; 0000 005C SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 005D 
; 0000 005E // TWI initialization
; 0000 005F // TWI disabled
; 0000 0060 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0061 /****************************************************************
; 0000 0062 *****************************************************************
; 0000 0063 *****************************************************************
; 0000 0064 ****************************************************************/
; 0000 0065 
; 0000 0066 
; 0000 0067 	DDRA=0xff; //LCD_DATA port as output port
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0068 	DDRB=0xff; //signal as out put
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0069     DDRC=0xff;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 006A 	PORTB=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 006B 	DDRD=0x0f;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 006C 	pad=0xf0;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 006D 	lcd_init(16); //initialization of LCD
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 006E 	lcd_puts("Enter Password: ");
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 006F 	while(1)
;PCODE: $00000063 VOL: 0
; 0000 0070 	{
; 0000 0071 		PORTD=0xF0; //set all the input to one
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0072 		value=PIND; //get the PORTD value in variable “value”
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0073 		if(value!=0xf0) //if any key is pressed value changed
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0074 		{
; 0000 0075 
; 0000 0076 			check1();
;PCODE: $0000006B VOL: 0
; 0000 0077 			check2();
;PCODE: $0000006C VOL: 0
; 0000 0078 			check3();
;PCODE: $0000006D VOL: 0
; 0000 0079 			check4();
;PCODE: $0000006E VOL: 0
; 0000 007A 
; 0000 007B            chpass();
;PCODE: $0000006F VOL: 0
; 0000 007C 	    }
; 0000 007D     }
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 007E 
; 0000 007F 
; 0000 0080 }
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0

	.DSEG
_0x4:
	.BYTE 0x11
;
;
;
;void check1(void)
; 0000 0085 {

	.CSEG
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0086     //DDRD = 0xf0;
; 0000 0087     pad =0b11111110;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0088     //pad &= (0<<r1);
; 0000 0089     delay_us(10);
;PCODE: $0000007A VOL: 0
; 0000 008A     if(PIND.4==0)
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 008B     {
; 0000 008C         lcd_gotoxy(index,2);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 008D         lcd_puts("1");
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 008E         PORTB =0b00000001;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 008F         input[index]='1';
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0090         index++;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0091         delay_ms(70);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0092 
; 0000 0093     }
; 0000 0094     if(PIND.5==0)
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0095         {
; 0000 0096 
; 0000 0097         lcd_gotoxy(index,2);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0098                     lcd_puts("2");
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0099                     input[index]='2';
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 009A             PORTB =0b00000010;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 009B             index++;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 009C         delay_ms(70);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 009D         }
; 0000 009E     if(PIND.6==0)
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 009F         {
; 0000 00A0         lcd_gotoxy(index,2);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00A1             lcd_puts("3");
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00A2             PORTB =0b00000100;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 00A3              input[index]='3';
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 00A4             index++;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00A5         delay_ms(70);
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 00A6         }
; 0000 00A7         value=0xF0;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00A8 }
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0

	.DSEG
_0xB:
	.BYTE 0x6
;
;
;void check2(void)
; 0000 00AC {

	.CSEG
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00AD     pad=0b11111101;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00AE     //pad &= (0<<r2);
; 0000 00AF     delay_us(10);
;PCODE: $000000C5 VOL: 0
; 0000 00B0     if(PIND.4==0)
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 00B1         {
; 0000 00B2         lcd_gotoxy(index,2);
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 00B3             lcd_puts("4");
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00B4             PORTB =0b00001000;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 00B5             input[index]='4';
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 00B6             index++;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00B7         delay_ms(70);
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00B8         }
; 0000 00B9      if(PIND.5==0)
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00BA         {
; 0000 00BB         lcd_gotoxy(index,2);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 00BC             lcd_puts("5");
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00BD             PORTB =0b00010000;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00BE             input[index]='5';
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 00BF             index++;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 00C0         delay_ms(70);
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 00C1         }
; 0000 00C2      if(PIND.6==0)
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 00C3         {
; 0000 00C4         lcd_gotoxy(index,2);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 00C5             lcd_puts("6");
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00C6             PORTB =0b00100000;
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 00C7             input[index]='6';
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00C8             index++;
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 00C9         delay_ms(70);
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 00CA         }
; 0000 00CB                 value=0xF0;
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 00CC 
; 0000 00CD }
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0

	.DSEG
_0xF:
	.BYTE 0x6
;
;void check3(void)
; 0000 00D0 {

	.CSEG
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 00D1     pad=0b11111011;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 00D2     //pad &= (0<<r3);
; 0000 00D3     delay_us(10);
;PCODE: $00000110 VOL: 0
; 0000 00D4     if(PIND.4==0)
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00D5         {
; 0000 00D6         lcd_gotoxy(index,2);
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00D7             lcd_puts("7");
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00D8             PORTB =0b01000000;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00D9             input[index]='7';
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00DA             index++;
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00DB         delay_ms(70);
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 00DC         }
; 0000 00DD      if(PIND.5==0)
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00DE         {
; 0000 00DF         lcd_gotoxy(index,2);
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00E0             lcd_puts("8");
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00E1             PORTB =0b10000000;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00E2             input[index]='8';
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 00E3             index++;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00E4         delay_ms(70);
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00E5         }
; 0000 00E6      if(PIND.6==0)
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00E7         {
; 0000 00E8 
; 0000 00E9         lcd_gotoxy(index,2);
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 00EA             lcd_puts("9");
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00EB             input[index]='9';
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00EC             index++;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 00ED         delay_ms(70);
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00EE 
; 0000 00EF         }
; 0000 00F0                 value=0xF0;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 00F1 
; 0000 00F2 }
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0

	.DSEG
_0x13:
	.BYTE 0x6
;
;void check4(void)
; 0000 00F5 {

	.CSEG
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 00F6     pad =0b11110111;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00F7     //pad &= (0<<r4);
; 0000 00F8     delay_us(10);
;PCODE: $00000159 VOL: 0
; 0000 00F9     if(PIND.4==0)
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00FA         {
; 0000 00FB         lcd_gotoxy(index,2);
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00FC             lcd_puts("*");
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00FD             input[index]='*';
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00FE             index++;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 00FF         delay_ms(70);
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 0100         }
; 0000 0101    if(PIND.5==0)
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 0102             {
; 0000 0103         lcd_gotoxy(index,2);
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 0104                 lcd_puts("0");
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 0105                 PORTB =0b00000000;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 0106                 input[index]='0';
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 0107             index++;
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 0108         delay_ms(70);
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 0109             }
; 0000 010A    if(PIND.6==0)
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 010B     {
; 0000 010C         lcd_gotoxy(index,2);
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 010D         lcd_puts("#");
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 010E         input[index]='#';
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 010F             index++;
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 0110         delay_ms(70);
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 0111 
; 0000 0112     }
; 0000 0113             value=0xF0;
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 0114 
; 0000 0115 }
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0

	.DSEG
_0x17:
	.BYTE 0x6
;
;void chpass()
; 0000 0118 {

	.CSEG
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 0119     if(index<4){
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 011A 
; 0000 011B        // lcd_puts("fuuuk");
; 0000 011C 
; 0000 011D 	}
; 0000 011E 
; 0000 011F     if(index>3){
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 0120 
; 0000 0121        int i;
; 0000 0122        for(i=0;i<4;i++){
;PCODE: $000001A5 VOL: 0
;	i -> Y+0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 0123              if(input[i]==pass[i]) {
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 0124                 c=c<<1;
;PCODE: $000001B8 VOL: 0
; 0000 0125             }
; 0000 0126        }
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 0127 
; 0000 0128        if(c==16)
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 0129        {
; 0000 012A        lcd_clear();
;PCODE: $000001C3 VOL: 0
; 0000 012B        lcd_puts("door is opened");
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 012C         beepbeep();
;PCODE: $000001C7 VOL: 0
; 0000 012D        }
; 0000 012E 
; 0000 012F       else if(c!=16 && index==4)
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 0130        {
; 0000 0131         lcd_clear();
;PCODE: $000001D4 VOL: 0
; 0000 0132        lcd_puts("wrong password!");
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 0133        notbeep();
;PCODE: $000001D8 VOL: 0
; 0000 0134        //delay_ms(500);
; 0000 0135        lcd_clear();
;PCODE: $000001D9 VOL: 0
; 0000 0136        lcd_puts("Enter another:");
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 0137        index=0;
;PCODE: $000001DD VOL: 0
; 0000 0138        c=1;
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 0139        }
; 0000 013A 
; 0000 013B        else if (c!=16)
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 013C        {
; 0000 013D           lcd_clear();
;PCODE: $000001E5 VOL: 0
; 0000 013E                   index=0;
;PCODE: $000001E6 VOL: 0
; 0000 013F          lcd_puts("Enter Password:");
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0140          c=1;
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 0141 
; 0000 0142        }
; 0000 0143 
; 0000 0144     }
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 0145 
; 0000 0146 
; 0000 0147 
; 0000 0148 
; 0000 0149 
; 0000 014A 
; 0000 014B 
; 0000 014C }
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0

	.DSEG
_0x21:
	.BYTE 0x3E
;
;
;
;
;void beepbeep() {
; 0000 0151 void beepbeep() {

	.CSEG
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 0152 int i;
; 0000 0153          for(i=0;i<10;i++){
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;	i -> R16,R17
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 0154              PORTB=0b10101010;
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 0155              delay_ms(20);
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 0156              PORTB=0b01010101;
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 0157              delay_ms(20);
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0158 
; 0000 0159          }
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 015A 
; 0000 015B }
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;
;void notbeep(){
; 0000 015D void notbeep(){
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 015E          int i;
; 0000 015F        for(i=0;i<10;i++){
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;	i -> R16,R17
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0160              PORTC.0=1;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 0161              delay_ms(20);
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 0162              PORTC.0=0;
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 0163              delay_ms(20);
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 0164 
; 0000 0165          }
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 0166 
; 0000 0167 }
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
